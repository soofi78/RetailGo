<Window x:Class="HashGo.Wpf.App.BestTech.Views.ProductDetailsPopup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HashGo.Wpf.App.BestTech.Views"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen" WindowStyle="None"
        Background="White"
        xmlns:controls="clr-namespace:HashGo.Wpf.App.BestTech.Controls"
        xmlns:baseControls="clr-namespace:HashGo.Wpf.App.BestTech.Controls"

        Title="ProductDetailsPopup" Height="580" Width="355">
    <Window.Resources>
        <Style TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Width="80" Height="24" CornerRadius="5" 
                                BorderThickness="1" BorderBrush="Black"
                            Background="White" Cursor="Hand">
                            <ContentPresenter HorizontalAlignment="Center" TextBlock.Foreground="Black"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#91E4F7"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#91E4F7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        
        <Style TargetType="Border" x:Key="borderStyle">
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#00B5CB" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border CornerRadius="10" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="36"/>
                <RowDefinition />
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>

            <baseControls:ImageNavigationControl Grid.Row="0"
                                             ImageSources="{Binding SelectedUnit.ImageSources}"/>
            <StackPanel HorizontalAlignment="Center" Grid.Row="1">
                <TextBlock Text="{Binding SelectedUnit.UnitName}"/>
                <TextBlock Text="{Binding SelectedUnit.UnitPrice,StringFormat=C}" Foreground="Red" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,5,0,5">
                <ToggleButton Content="Description" Margin="0,0,2,0"
                    Command="{Binding ViewDetailsCommand}" CommandParameter="Description"
                    IsChecked="true" Foreground="White"/>
                <ToggleButton Content="Specs" Margin="0,0,2,0"
                              Command="{Binding ViewDetailsCommand}" CommandParameter="Specs"
                              Foreground="White"/>
                <ToggleButton Content="Warranty" Margin="0,0,2,0"
                              Command="{Binding ViewDetailsCommand}" CommandParameter="Warranty"
                              Foreground="White"/>
                <ToggleButton Content="Others"
                              Command="{Binding ViewDetailsCommand}" CommandParameter="Others"
                              Foreground="White"/>
            </StackPanel>

            <ScrollViewer Grid.Row="3">
                <TextBlock Text="{Binding SelectedUnit.DescriptionNotes}" TextWrapping="Wrap" />
            </ScrollViewer>

            <Grid Grid.Row="4" Margin="10,10,10,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Background="white"  PreviewMouseLeftButtonUp="Border_PreviewMouseLeftButtonUp"
                        Cursor="Hand" BorderBrush="Black" BorderThickness="1"
                        Width="100" HorizontalAlignment="Left" Style="{StaticResource borderStyle}"
                        CornerRadius="5">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StartOverScreenCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <TextBlock Text="Cancel" HorizontalAlignment="Center"
                                VerticalAlignment="Center" Foreground="Black" />
                </Border>

                <Border Background="white" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource borderStyle}"
                        PreviewMouseLeftButtonUp="Border_PreviewMouseLeftButtonUp_1"
                        Cursor="Hand" BorderBrush="Black" BorderThickness="1" Margin="0,0,10,0"
                        Width="100" 
                        CornerRadius="5">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding ViewCartCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <TextBlock Text="Next" HorizontalAlignment="Center"
       VerticalAlignment="Center" Foreground="Black" />
                </Border>

            </Grid>
        </Grid>
    </Border>
</Window>
