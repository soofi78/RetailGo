<UserControl
    x:Class="HashGo.Wpf.App.Views.Controls.MenuItemFlowControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:HashGo.Wpf.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:HashGo.Wpf.App.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:HashGo.Domain.ViewModels;assembly=HashGo.Domain"
    xmlns:controls="clr-namespace:HashGo.Wpf.App.Views.Controls"
    d:DataContext="{d:DesignInstance Type=vm:MenuItemDetailViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Images/DineConnectIcons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />


            <converters:ImageValueConverter x:Key="imageValueConverter" />
            <converters:TagToImageUriConverter x:Key="tagToImageUriConverter" />
            <converters:TagToColorConverter x:Key="tagToColorConverter" />
            <converters:CollectionWidthBasedOnItemsWidthConverter x:Key="CollectionWidthBasedOnItemsWidthConverter"/>


            <SolidColorBrush x:Key="brandBrush" Color="{Binding DataContext.SelectedRestaurant.BrandThemeSetting.PrimaryButtonColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MenuItemFlowControl}}}" />

            <SolidColorBrush x:Key="bkColor" Color="{Binding DataContext.SelectedRestaurant.AccentColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MenuItemFlowControl}}}" />

            <ItemsPanelTemplate x:Key="WrapPanelItemsPanelTemplate">
                <WrapPanel
                    Margin="0"
                    IsItemsHost="True"
                    Orientation="Horizontal" />
            </ItemsPanelTemplate>


        </ResourceDictionary>

    </UserControl.Resources>


    <Grid x:Name="grdWorkFlow">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".3*" />

            <ColumnDefinition Width=".7*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" MinHeight="80" />
        </Grid.RowDefinitions>


        <ListBox
            x:Name="lstFlowStep"
            Grid.Column="0"
            Margin="10,0"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Center"
            BorderThickness="0"
            ItemsSource="{Binding WorkFlow.Steps}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedItem="{Binding SelectedWorkFlowStep}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=lstFlowStep, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border
                                    Name="_Border"
                                    Height="120"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="{DynamicResource DineConnectTagBackgroundBrush}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="true">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Ellipse
                                            x:Name="_bulletSelector"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Width="20"
                                            Height="20"
                                            Margin="20,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Fill="Transparent"
                                            Stroke="Gray"
                                            StrokeThickness=".5" />

                                        <ContentPresenter
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            SnapsToDevicePixels="True" />

                                        <TextBlock
                                            x:Name="_hightlightUnderLine"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="0,-10,0,0"
                                            VerticalAlignment="Top"
                                            Background="Transparent"
                                            FontSize="30"
                                            Foreground="{StaticResource brandBrush}"
                                            Text="••••"
                                            Visibility="Hidden" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <!--<Setter TargetName="_Border" Property="BorderThickness" Value="2" />
                                        <Setter TargetName="_hightlightUnderLine" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="_bulletSelector" Property="Fill" Value="{DynamicResource bkColor}" />-->
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=IsActiveSelection}" Value="True">
                                        <Setter TargetName="_Border" Property="BorderThickness" Value="2" />
                                        <Setter TargetName="_hightlightUnderLine" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="_bulletSelector" Property="Fill" Value="{DynamicResource bkColor}" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock
                        x:Name="txtProductGroupTitle"
                        Grid.Row="0"
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="21"
                        Style="{StaticResource RubikFontMediumStyle}"
                        Text="{Binding Name}"
                        TextWrapping="Wrap" />
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>

        <Grid Grid.Column="1" Margin="10,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />


            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                FontSize="28"
                Style="{StaticResource RubikFontBoldStyle}"
                Text="{Binding SelectedWorkFlowStep.Name}" />

            <TextBlock
                Grid.Row="1"
                FontSize="21"
                Foreground="DarkGray"
                Style="{StaticResource RubikFontRegularStyle}"
                Text="{Binding SelectedWorkFlowStep.SubHeader}" />

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />

                </Grid.ColumnDefinitions>

                <TextBlock
                    FontSize="36"
                    Style="{StaticResource RubikFontBoldStyle}"
                    Text="{Binding SelectedWorkFlowStep.Description}" />

                <Border
                    x:Name="bdrOptional"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Background="{DynamicResource bkColor}"
                    CornerRadius="20"
                    Visibility="{Binding SelectedWorkFlowStep.IsOptional, Converter={StaticResource booleanToVisibilityConverter}, FallbackValue=Hidden}">
                    <TextBlock
                        Margin="15,10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="20"
                        Style="{StaticResource RubikFontBoldStyle}"
                        Text="Optional" />
                </Border>

            </Grid>

           
                <ListView
                 Grid.Row="3"
                x:Name="lstWorkFlowOption"
                Style="{StaticResource ItemsControlStyleWithScroll}"
                controls:KineticBehaviour.HandleKineticScrolling="True"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                BorderThickness="0"
                ItemsPanel="{DynamicResource WrapPanelItemsPanelTemplate}"
                ItemsSource="{Binding WorkFlowStepOptionModels}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        SnapsToDevicePixels="true">
                                            <ContentPresenter
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            SnapsToDevicePixels="true" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>


                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button
                            x:Name="_itemPresenter"
                            Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, ConverterParameter='.293', Converter={converters:PercentageConverter}}"
                            Height="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, ConverterParameter='.35', Converter={converters:PercentageConverter}}"
                            Margin="5"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderBrush="{DynamicResource DineConnectFrameBorderBrush}"
                            BorderThickness="1.5"
                            Command="{Binding DataContext.SelectWorkFlowOptionValueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MenuItemFlowControl}}}"
                            CommandParameter="{Binding Data}"
                            Style="{DynamicResource RoundCornerButtonStyle}">
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height=".7*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height=".2*" MinHeight="65" />
                                    </Grid.RowDefinitions>


                                    <Image
                                    Grid.Row="0"
                                    Margin="5"
                                    VerticalAlignment="Center"
                                    DataContext="{Binding Data.Icon, Converter={StaticResource imageValueConverter}}"
                                    Stretch="Uniform"
                                    Style="{StaticResource imageAsyncSourceConverterStyle}" />


                                    <TextBlock
                                    Grid.Row="1"
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="21"
                                    Foreground="DarkGray"
                                    Style="{StaticResource RubikFontMediumStyle}"
                                    Text="{Binding Data.Amount}" />

                                    <Border
                                    x:Name="_titleBorder"
                                    Grid.Row="2"
                                    Margin="-2,0,-2,-2"
                                    CornerRadius="0 0 10 10">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"  />
                                            </Grid.RowDefinitions>
                                            <TextBlock
                                            x:Name="txtMenuTitle"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="14"
                                            Style="{StaticResource RubikFontMediumStyle}"
                                            Text="{Binding Data.Title}"
                                            TextWrapping="Wrap" />
                                            <Grid
                                            x:Name="grdQuantity"
                                            Grid.Row="1"
                                            Margin="0,0,0,10"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding Data.CanAddQuantity, Converter={StaticResource booleanToVisibilityConverter}, TargetNullValue='Collapsed'}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>


                                                <Button
                                                x:Name="btnSubtractQuantity"
                                                Grid.Column="0"
                                                Width="{Binding ActualHeight, ElementName=_titleBorder, Converter={StaticResource CollectionWidthBasedOnItemsWidthConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                Height="{Binding RelativeSource={RelativeSource self},Path=ActualWidth}"
                                                VerticalAlignment="Center"
                                                Background="{StaticResource DineConnectFrameBackgroundBrush}"
                                                Command="{Binding DataContext.SubtractQuantityCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MenuItemFlowControl}}}"
                                                CommandParameter="{Binding Data}"
                                                Style="{StaticResource RoundButtonStyle}">
                                                    <TextBlock Style="{StaticResource RubikTextBlockStyle}" Text="-" FontSize="20" />
                                                </Button>


                                                <TextBlock
                                                x:Name="txtQuantity"
                                                Grid.Column="1"
                                                Margin="15,10,15,10"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource RubikTextBlockStyle}"
                                                Text="{Binding Data.TotalQuantity}" />

                                                <Button
                                                x:Name="btnAddQuantity"
                                                Grid.Column="2"
                                                Width="{Binding ActualHeight, ElementName=_titleBorder, Converter={StaticResource CollectionWidthBasedOnItemsWidthConverter}, UpdateSourceTrigger=PropertyChanged}"
                                                Height="{Binding RelativeSource={RelativeSource self},Path=ActualWidth}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Background="{StaticResource DineConnectFrameBackgroundBrush}"
                                                Command="{Binding DataContext.AddQuantityCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MenuItemFlowControl}}}"
                                                CommandParameter="{Binding Data}"
                                                Style="{StaticResource RoundButtonStyle}">
                                                    <TextBlock Style="{StaticResource RubikTextBlockStyle}" Text="+" FontSize="20"/>
                                                </Button>
                                            </Grid>
                                        </Grid>

                                    </Border>

                                </Grid>

                            </Button>
                            <!--<DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                <Setter TargetName="_titleBorder" Property="Background" Value="{StaticResource bkColor}" />
                                <Setter TargetName="_itemPresenter" Property="BorderBrush" Value="{StaticResource bkColor}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>-->
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

        </Grid>

        <Grid
            x:Name="grdWorkFlowButtons"
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />

            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Margin="0,0,5,0"
                Background="Transparent"
                BorderBrush="{DynamicResource DineConnectTagBackgroundBrush}"
                BorderThickness="2"
                Command="{Binding MoveToPreviousStepCommand}"
                CommandParameter="{Binding SelectedWorkFlowStep}"
                Style="{StaticResource RoundCornerButtonStyle}">
                <TextBlock Style="{StaticResource ButtonLabelRubikTextBlockStyle}" Text="Back" />
            </Button>
            <Button
                Grid.Column="1"
                Margin="5,0,0,0"
                Background="{DynamicResource bkColor}"
                BorderBrush="{DynamicResource DineConnectTagBackgroundBrush}"
                BorderThickness="2"
                Command="{Binding MoveToNextStepCommand}"
                CommandParameter="{Binding SelectedWorkFlowStep}"
                Style="{StaticResource WorkFlowStepNextButtonStyle}">
                <TextBlock Style="{StaticResource ButtonLabelRubikTextBlockStyle}" Text="Next" />
            </Button>
            <Button
                Grid.Column="1"
                Margin="5,0,0,0"
                Background="{DynamicResource bkColor}"
                BorderBrush="{DynamicResource DineConnectTagBackgroundBrush}"
                BorderThickness="2"
                Command="{Binding AddItemToCartCommand}"
                Style="{StaticResource AddToCartButtonStyle}">
                <TextBlock Style="{StaticResource ButtonLabelRubikTextBlockStyle}" Text="Add To Cart" />
            </Button>
        </Grid>

    </Grid>
</UserControl>
